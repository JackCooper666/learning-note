#include <iostream>
using namespace std;
int main(){
    long long a[30][30] = {0};
    int n = 20, m = 20, x = 3, y = 3; // n行m列的二维数组，起点为(0,0)，终点为(n,m)

    for(int i = 0; i <= n; i++) {
        for(int j = 0; j <= m; j++) {
            a[i][j] = 1; // 初始化二维数组
        }
    }

    a[x][y] = 0; // 设置障碍物位置为0
    if(x + 2 <= n && y + 1 <= m) {
        a[x + 2][y + 1] = 0; // 设置另一个障碍物位置为0
        cout << "障碍物位置: (" << x + 2 << ", " << y + 1 << ")" << endl;
    }
    if(x + 1 <= n && y + 2 <= m) {
        a[x + 1][y + 2] = 0; // 设置另一个障碍物位置为0
        cout << "障碍物位置: (" << x + 1 << ", " << y + 2 << ")" << endl;
    }
    if(x + 1 <= n && y -2 >= 0) {
        a[x + 1][y - 2] = 0; // 设置另一个障碍物位置为0
        cout << "障碍物位置: (" << x + 1 << ", " << y - 2 << ")" << endl;
    }
    if(x + 2 <= n && y - 1 >= 0) {
        a[x + 2][y - 1] = 0; // 设置另一个障碍物位置为0
        cout << "障碍物位置: (" << x + 2 << ", " << y - 1 << ")" << endl;
    }
    if(x - 2 >= 0 && y - 1 >= 0) {
        a[x - 2][y - 1] = 0; // 设置另一个障碍物位置为0
        cout << "障碍物位置: (" << x - 2 << ", " << y - 1 << ")" << endl;
    }
    if(x - 1 >= 0 && y - 2 >= 0) {
        a[x - 1][y - 2] = 0; // 设置另一个障碍物位置为0
        cout << "障碍物位置: (" << x - 1 << ", " << y - 2 << ")" << endl;
    }
    if(x - 2 >= 0 && y + 1 <= m) {
        a[x - 2][y + 1] = 0; // 设置另一个障碍物位置为0
        cout << "障碍物位置: (" << x - 2 << ", " << y + 1 << ")" << endl;
    }
    if(x - 1 >= 0 && y + 2 <= m) {
        a[x - 1][y + 2] = 0; // 设置另一个障碍物位置为0
        cout << "障碍物位置: (" << x - 1 << ", " << y + 2 << ")" << endl;
    }

    for(int i = 0; i <= n; i++) {
        for(int j = 0; j <= m; j++) {
            if(i == 0 && j == 0) {
                a[i][j] = 1; // 起点
                continue; // 起点
            }

            if(a[i][j] == 0) {
                continue;
            }

            if(i == 0 || j == 0) {
                a[i][j] = 1; // 边界条件
            } else {
                a[i][j] = a[i - 1][j] + a[i][j - 1]; // 状态转移方程
            }
        }
    }

    for(int i = 0; i < 30; i++) {
        for(int j = 0; j < 30; j++) {
            std::cout << a[i][j] << " ";
        }
        std::cout << std::endl;
    }

    return 0;
}